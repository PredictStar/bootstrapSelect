http://www.cnblogs.com/landeanfen/p/7457283.html#_label3

css引入
	<link rel="stylesheet" type="text/css" href="/static/core/bootstrap/css/bootstrap.css">
	<link href="/manage/bootstrap/css/bootstrap-select.min.css" rel="stylesheet" />

js引入
	<script src="/static/core/jquery/jquery-1.11.2.min.js"></script>
	<script src="/static/core/bootstrap/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select.js"></script>
	<script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select-create.js"></script>
必须要引入的内容

<!--下拉多选框-->
    <link href="/manage/bootstrap/css/bootstrap-select.min.css" rel="stylesheet" />
    <script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select.js"></script>
    <script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select-create.js"></script>

    <!--让IE8/9支持媒体查询，兼容栅格布局-->
    <script src="/static/core/html5/html5shiv.min.js"></script>
    <script src="/static/core/html5/respond.js"></script>
    <!--全局工具js-->
    <script src="/manage/hp/js/help.js"></script>
发现:引入其它js导致点不开下拉框(具体哪个js不清楚)
	
	
页面上可直接(若是在页面一开始加载(立即函数),就用js生成好如下样式也是可以的,初始化用的js本身自带的了)	
	<select id="test1" class="selectpicker" multiple>//class没写selectpicker,生成时会自动加上
		<option value="1">广东省</option>
		<option value="2">广西省</option>
	</select>
	
	$("#test1").attr("multiple") ->"multiple"
	是否是多选
		if(typeof($("#test1").attr("multiple"))=="undefined"){} //是单选
		
或通过js进行赋值
	<select id="basicCon_grade" class="selectpicker">
    </select>
	根据ajax返回数据赋值
		 $('#test1').bootstrapSelect({
			url:'/testPageController/test/bb',//返回类型格式要为[{"text":"ggg","value":"1"},{"text":"uuuuu","value":"333"}]
			//data: {},//此若有则不走后台方法,所赋值会从这获取
			param:{str:"中文"},//所传参数
			valueField: 'value',//根据返回值去写此进行绑定值
			textField: 'text',
			onBeforeLoad:function () {
				console.log(("开始执行"))
			},
			onLoadSuccess:function () {
				console.log(("成功返回"));
				bootstrapSelect.init("#test1");
				//赋默认选中可写此处
			}
		});
	直接定义数据
		$('#test1').bootstrapSelect({
			data: [{"text":"ggg","value":"1"},{"text":"uuuuu","value":"333"}],
			valueField: 'value',//根据返回值去写此进行绑定值
			textField: 'text',
			onLoadSuccess:function () {
				console.log(("成功返回"));
				bootstrapSelect.init("#test1");
			}
		});
	字典方法封装(好看的下拉(多选,单选)选择框)
		var whatformData={};		//示例变量,通过值传递把查询到的值保存在此变量里,key是code值,value是{};用 global 传递			
		bootstrapSelect.dictionaries({selectID:'test1',mark:"dwgl_orgType",type:"1",global:whatformData,onLoadSuccess:aa,bolRecord:true});
			上 onLoadSuccess 设置回调函数(和下不是同一个),如下示例有个叫aa的函数,若写为 onLoadSuccess:aa(),函数会立即执行(猜即把方法返回值赋值给onLoadSuccess)
			bootstrapSelect 方法属性 onLoadSuccess 对应的函数是异步的,其执行时机写在 setTimeout(function(){},300) 里了
			bolRecord:true 开启缓存功能,使请求后台只一次,会使ajax 为'async': false
			若设置bolSelect为true则可选中"请选择"(即空)
		注意要有	layui.use(['layer'], function(){});//初始化 layer,此时layer为全局变量;若其它js已经初始化过就不用写此了
		
	ajax请求封装,适应于返回格式//{data:[{},{}],flag:1,msg:"xx"};//url指定后,返回格式正确,就能生成下拉框了
			
		bootstrapSelect.ajax({selectID:'test1',url:'/user/getUserLevel',data:{"type":"1"},text:'occupation_name',value:'occupation_level'});
			参数也可配置 global (key是上value对应的key的值value是{}), 与 onLoadSuccess

取值
	var value = $('#sel'').val(); 
		多选返回如 ['1','2','3']
		单选返回如 '1'
		无选中值返回null;
		
使值为选中状态
	$('#sel').selectpicker('val', '1');
		
	js控制选中某	//.trigger("change"); 当select绑定change事件时,使选中并触发
		$('#sel').selectpicker('val', '1').trigger("change");
	多选,使选中某
		$('#sel').selectpicker('val', ['1','2','3']).trigger("change");
	使无任何选中
		单选
			$('#sel').selectpicker('val', '');
		多选	
			$('#DATE_RULE_DEFINITION_0').next().next().find(".selected").trigger("click"); 
	注意若想一开始就绑定初始化值
			需把选中语句写在bootstrapSelect.dictionaries 方法的 onLoadSuccess回调函数中
		或
			首先选中语句写在setTimeout(function(){ //使这块最后执行},301) 里;
			然后若是使用bootstrapSelect.dictionaries方法进行的初始化 设置bolRecord:true ,使'async': false
组件其他用法
	全选： $('#sel').selectpicker('selectAll'); 

	反选： $('#sel').selectpicker('deselectAll'); 

//适应手机模式： $('#sel').selectpicker('mobile'); 

组件禁用：//下两句是一起用的
	$('#sel').prop('disabled', true);
	$('#sel').selectpicker('refresh');
组件启用：
	$('#sel').prop('disabled', false);
	$('#sel').selectpicker('refresh');
组件销毁：
	$('#sel').selectpicker('destroy');
监控用change事件	

再次生成下拉框,导致点击失效
	bootstrap-select.js (2773行)  var data = $this.data('selectpicker') 有值,导致不会执行事件绑定
	一开始所绑定的change事件对生成后元素不起作用
	解决 bootstrap-select-create.js (122行)
		bootstrapSelect.dictionaries=function(param){
			$('#'+param.selectID).selectpicker('destroy');//若已存在则销毁
	
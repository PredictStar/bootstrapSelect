http://www.cnblogs.com/landeanfen/p/7457283.html#_label3

css引入
	<link rel="stylesheet" type="text/css" href="/static/core/bootstrap/css/bootstrap.css">
	<link href="/manage/bootstrap/css/bootstrap-select.min.css" rel="stylesheet" />

js引入
	<script src="/static/core/jquery/jquery-1.11.2.min.js"></script>
	<script src="/static/core/bootstrap/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select.js"></script>
	<script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select-create.js"></script>
必须要引入的内容
<!--下拉多选框-->	
	<link href="/manage/bootstrap/css/bootstrap-select.min.css" rel="stylesheet" />
	<script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select.js"></script>
	<script type="text/javascript" src="/manage/bootstrap/js/bootstrap-select-create.js"></script>
	
	
页面上可直接(若是在页面一开始加载(立即函数),就用js生成好如下样式也是可以的,初始化用的js本身自带的了)	
	<select id="test1" class="selectpicker" multiple>
		<option value="1">广东省</option>
		<option value="2">广西省</option>
	</select>


或通过js进行赋值
	根据ajax返回数据赋值
		 $('#test1').bootstrapSelect({
			url:'/testPageController/test/bb',//返回类型格式要为[{"text":"ggg","value":"1"},{"text":"uuuuu","value":"333"}]
			//data: {},//此若有则不走后台方法,所赋值会从这获取
			param:{str:"中文"},//所传参数
			valueField: 'value',//根据返回值去写此进行绑定值
			textField: 'text',
			onBeforeLoad:function () {
				console.log(("开始执行"))
			},
			onLoadSuccess:function () {
				console.log(("成功返回"));
				bootstrapSelect.init("#test1");
			}
		});
	直接定义数据
		 $('#test1').bootstrapSelect({
			data: [{"text":"ggg","value":"1"},{"text":"uuuuu","value":"333"}],
			valueField: 'value',//根据返回值去写此进行绑定值
			textField: 'text',
			onLoadSuccess:function () {
				console.log(("成功返回"));
				bootstrapSelect.init("#test1");
			}
		});
	字典方法封装
		var whatformData={}//示例变量,通过值传递把查询到的值保存在此变量里,key是code值,value是{};用 global 传递
			onLoadSuccess 当执行完ajax后需要执行的函数,如下示例有个叫aa的函数,若写为onLoadSuccess:aa(),函数会立即执行
		bootstrapSelect.dictionaries({selectID:'test1',mark:"dwgl_orgType",type:"1",global:whatformData,onLoadSuccess:aa});
		注意要有	layui.use(['layer'], function(){});//初始化 layer,此时layer为全局变量;若其它js已经初始化过就不用写此了
		
	ajax请求封装,适应于返回格式//{data:[{},{}],flag:1,msg:"xx"}
			
		bootstrapSelect.ajax({selectID:'test1',url:'/user/getUserLevel',data:{"type":"1"},text:'occupation_name',value:'occupation_level'});
			参数也可配置global(key是上value对应的key的值value是{}), 与 onLoadSuccess

取值
	var value = $('#sel'').val(); 
		多选返回如 ['1','2','3']
		单选返回如 ['1']	
		
使值为选中状态
	$('#sel').selectpicker('val', '1');
	
	自动选中某时顺便触发一下组件的change事件
		$('#sel').selectpicker('val', '1').trigger("change");
	多选
		$('#sel').selectpicker('val', ['1','2','3']).trigger("change");
	
组件其他用法
	全选： $('#sel').selectpicker('selectAll'); 

	反选： $('#sel').selectpicker('deselectAll'); 

//适应手机模式： $('#sel').selectpicker('mobile'); 

组件禁用：//下两句是一起用的
	$('#sel').prop('disabled', true);
	$('#sel').selectpicker('refresh');
组件启用：
	$('#sel').prop('disabled', false);
	$('#sel').selectpicker('refresh');
组件销毁：
	$('#sel').selectpicker('destroy');